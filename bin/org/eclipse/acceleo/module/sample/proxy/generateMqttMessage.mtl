[comment encoding = UTF-8 /]
[module generateMqttMessage('http://www.mdse.org/proxy')]
[import org::eclipse::acceleo::module::sample::proxy::toCamel /]
[import org::eclipse::acceleo::module::sample::proxy::generateTranslator /]


[template public generateMqttMessage(aMqttMessage : MqttMessage)]
[let messageTopic: String = topic.toCamelHump().toLowerFirst()]
[file ('/src/main/kotlin/mqtt/handler/' + messageTopic + '.kt', false, 'UTF-8')]
package mqtt.handler

import coap.getClient
import org.eclipse.californium.core.CoapHandler
import org.eclipse.californium.core.CoapResponse
import org.eclipse.californium.core.coap.MediaTypeRegistry.TEXT_PLAIN
[for (write) separator('\n')]
	[let translator: String = messageTopic + 'To' + coapResource.name.toCamelHump().toUpperFirst()]
import translate.mqttToCoap.[translator /] as mc[translator.toUpperFirst() /]
	[/let]
[generateTranslator('/src/main/kotlin/translate/mqttToCoap/index.kt', messageTopic, coapResource.name) /]
[/for]

fun [messageTopic /](input: String) {
	[for (write) separator('\n')]
		[let coapName: String = coapResource.name.toCamelHump()]
    getClient("[coapName.toLowerFirst() /]").[method.toString().toLowerCase() /](object: CoapHandler {
        override fun onError() {
        }

        override fun onLoad(p0: CoapResponse?) {
        }
    }, mc[messageTopic.toUpperFirst() /]To[coapName.toUpperFirst() /](input), TEXT_PLAIN)
		[/let]
	[/for]
}
[/file]
[/let]

[/template]
